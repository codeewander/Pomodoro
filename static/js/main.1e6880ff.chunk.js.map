{"version":3,"sources":["styles/Main.module.scss","styles/TodoList.module.scss","styles/Todo.module.scss","styles/Navbar.module.scss","images/icon-bell.svg","images/icon-play--orange.svg","images/icon-delete.svg","images/tomato--orange.svg","images/tomato--green.svg","images/icon-pause--orange.svg","images/icon-cancel.svg","App.module.scss","redux/actions/actions.js","components/main.js","components/Navbar.js","components/TodoList.js","components/Todo.js","App.js","serviceWorker.js","redux/reducers/allReducer.js","index.js"],"names":["module","exports","main","date","content","count_container","count","controller","delete","bell","play","resttext","todo","tomato","buttons","checked","todolist","completed","player","container","panel","status_panel","nav","orange","green","__webpack_require__","p","app","nextTodoId","setCurrentTime","Date","year","getFullYear","month","getMonth","strDate","getDate","day","getDay","hour","getHours","minute","getMinutes","type","currentWeekday","currentDate","currentTime","timer","connect","state","mode","timerOn","timerStart","soundOn","dispatch","updateTime","setTimeout","startCounter","setInterval","resetTimer","stopCounter","clearInterval","handleSound","_ref","useEffect","react_default","a","createElement","className","styles","time","parseInt","concat","second","timerText","id","src","alt","onClick","style","border","backgroundColor","pause","deleted","orangeTomato","greenTomato","Navbar","props","useDispatch","value","payload","TodoList","todos","useSelector","todoList","filterMode","filter","filtered","map","key","undo","textDecoration","text","remove","input","showTodo","transform","marginLeft","marginRight","onSubmit","e","preventDefault","trim","placeholder","ref","node","components_TodoList","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","showRemainTime","setState","timeText","startTimer","console","log","newTime","playSound","stopTimer","showTodoList","changeWorkMode","presentMode","target","prevState","changeRestMode","changeFilterComplete","currentFilter","changeFilterActive","audioPlayer","document","getElementById","_this$state","overflow","components_Navbar","components_Todo","Component","Boolean","window","location","hostname","match","initialState","allReducer","arguments","length","undefined","action","assign","toConsumableArray","_objectSpread","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","es","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1e6880ff.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Main_main__2zd4R\",\"date\":\"Main_date__26wm3\",\"content\":\"Main_content__12elv\",\"count_container\":\"Main_count_container__1gCCW\",\"count\":\"Main_count__kQ1kN\",\"controller\":\"Main_controller__vy5uR\",\"delete\":\"Main_delete__2awKJ\",\"bell\":\"Main_bell__k_FlL\",\"play\":\"Main_play__2UI8g\",\"resttext\":\"Main_resttext__25kKF\",\"todo\":\"Main_todo__bB46z\",\"tomato\":\"Main_tomato__21i0I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttons\":\"TodoList_buttons__18UAT\",\"checked\":\"TodoList_checked__zA1pD\",\"todolist\":\"TodoList_todolist__3nWnJ\",\"completed\":\"TodoList_completed__Qg3pT\",\"player\":\"TodoList_player__2tW3q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todo\":\"Todo_todo__2apsR\",\"container\":\"Todo_container__1PpaK\",\"panel\":\"Todo_panel__36ou5\",\"status_panel\":\"Todo_status_panel__2gbBZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3sM_X\",\"orange\":\"Navbar_orange__1oA_H\",\"green\":\"Navbar_green__3Z9U_\"};","module.exports = __webpack_public_path__ + \"static/media/icon-bell.526aed07.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-play--orange.a185f0b0.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-delete.0520b13c.svg\";","module.exports = __webpack_public_path__ + \"static/media/tomato--orange.f4d25225.svg\";","module.exports = __webpack_public_path__ + \"static/media/tomato--green.4298a104.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-pause--orange.5094d45d.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-cancel.872654be.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__2ziFi\"};","export function toggleWorkMode() {\n  return {\n    type: \"TOGGLE_WORKMODE\",\n    payload: \"work\"\n  };\n}\n\nexport function toggleRestMode() {\n  return {\n    type: \"TOGGLE_RESTMODE\",\n    payload: \"rest\"\n  };\n}\n\nexport function showTodo() {\n  return {\n    type: \"SHOW_TODO\"\n  };\n}\n\nlet nextTodoId = 0;\nexport const addTodo = text => {\n  return {\n    type: \"ADD_TODO\",\n    id: nextTodoId++,\n    text\n  };\n};\n\nexport const completeTodo = id => {\n  return {\n    type: \"COMPLETE_TODO\",\n    id\n  };\n};\n\nexport const removeTodo = id => {\n  return {\n    type: \"REMOVE_TODO\",\n    id\n  };\n};\n\nexport const filterCompletedTodo = () => {\n  return {\n    type: \"FILTER_COMPLETED_TODO\"\n  };\n};\n\nexport const filterActiveTodo = () => {\n  return {\n    type: \"FILTER_ACTIVE_TODO\"\n  };\n};\n\nexport const filterAllTodo = () => {\n  return {\n    type: \"FILTER_ALL_TODO\"\n  };\n};\n\nexport const setVisibilityFilter = filter => {\n  return {\n    type: \"SET_VISIBILITY_FILTER\",\n    filter\n  };\n};\n\nexport const VisibilityFilters = {\n  SHOW_ALL: \"SHOW_ALL\",\n  SHOW_COMPLETED: \"SHOW_COMPLETED\",\n  SHOW_ACTIVE: \"SHOW_ACTIVE\"\n};\n\nexport const setCurrentTime = () => {\n  const date = new Date();\n  const year = date.getFullYear();\n  let month = date.getMonth() + 1;\n  let strDate = date.getDate();\n  const day = date.getDay();\n  let hour = date.getHours();\n  let minute = date.getMinutes();\n\n  if (month >= 1 && month <= 9) {\n    month = \"0\" + month;\n  }\n  if (strDate >= 0 && strDate <= 9) {\n    strDate = \"0\" + strDate;\n  }\n  if (minute >= 0 && minute <= 9) {\n    minute = \"0\" + minute;\n  }\n  const currentDate = year + \".\" + month + \".\" + strDate;\n  const currentTime = hour + \":\" + minute;\n  var weekdayArray = [\n    \"星期日\",\n    \"星期一\",\n    \"星期二\",\n    \"星期三\",\n    \"星期四\",\n    \"星期五\",\n    \"星期六\"\n  ];\n  const currentWeekday = weekdayArray[day];\n  return {\n    type: \"SET_CURRENT_TIME\",\n    currentWeekday,\n    currentDate,\n    currentTime\n  };\n};\n\nexport const updateTime = () => {\n  return dispatch => {\n    setTimeout(() => {\n      dispatch(setCurrentTime());\n    }, 60000);\n  };\n};\n\nexport const resetTimer = () => {\n  return {\n    type: \"RESET_TIMER\"\n  };\n};\n\nexport const tick = () => {\n  return {\n    type: \"TICK\"\n  };\n};\n\nlet timer = null;\nexport const startCounter = () => {\n  return dispatch => {\n    timer = setInterval(() => dispatch(tick()), 1000);\n  };\n};\n\nexport const countdown = () => {\n  return {\n    type: \"COUNT_DOWN\"\n  };\n};\n\nexport const stopCounter = () => {\n  clearInterval(timer);\n  return {\n    type: \"STOP_COUNTER\"\n  };\n};\n\nexport const handleSound = () => {\n  return {\n    type: \"HANDLE_SOUND\"\n  };\n};\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport bell from \"../images/icon-bell.svg\";\nimport play from \"../images/icon-play--orange.svg\";\nimport deleted from \"../images/icon-delete.svg\";\nimport orangeTomato from \"../images/tomato--orange.svg\";\nimport greenTomato from \"../images/tomato--green.svg\";\nimport pause from \"../images/icon-pause--orange.svg\";\nimport styles from \"../styles/Main.module.scss\";\nimport {\n  setCurrentTime,\n  updateTime,\n  startCounter,\n  resetTimer,\n  stopCounter,\n  handleSound\n} from \"../redux/actions/actions\";\n// import { useSelector } from \"react-redux\";\n\nconst Main = ({\n  timer,\n  timerOn,\n  timerStart,\n  mode,\n  currentDate,\n  currentWeekday,\n  currentTime,\n  setCurrentTime,\n  updateTime,\n  startCounter,\n  resetTimer,\n  stopCounter,\n  soundOn,\n  handleSound\n}) => {\n  // const mode = useSelector(state => state.mode);\n  // const time = useSelector(state => state.time);\n  useEffect(() => {\n    setCurrentTime();\n    updateTime();\n  });\n\n  const timerText = () => {\n    let time = timer;\n    let minute = parseInt(time / 60);\n    if (minute < 10) {\n      minute = `0${minute}`;\n    }\n    let second = time % 60;\n    if (second < 10) {\n      second = `0${second}`;\n    }\n    let timeText = `${minute}:${second}`;\n    return timeText;\n  };\n  return (\n    <div className={styles.main}>\n      <div className={styles.date}>\n        <p>\n          <span>{currentDate}</span>\n          <span>{currentWeekday}</span>\n          <span>{currentTime}</span>\n        </p>\n      </div>\n      <div className={styles.content}>\n        <div className={styles.count_container}>\n          <div className={styles.count}>{timerText()}</div>\n          <div className={styles.controller}>\n            <audio id=\"player\">\n              <source\n                src=\"http:www.gravomaster.com/alarm/sounds/schoolbell2.wav\"\n                type=\"audio/mpeg\"\n              />\n            </audio>\n            <img\n              src={bell}\n              alt=\"bell\"\n              className={styles.bell}\n              onClick={handleSound}\n              style={{\n                border: soundOn ? \"2px solid #f08448\" : \"2px solid #e8e8e8\",\n                backgroundColor: soundOn ? \"#f08448\" : null\n              }}\n            />\n            {!timerOn && (!timerOn || timer > 0) && (\n              <img\n                src={play}\n                alt=\"play\"\n                className={styles.play}\n                onClick={startCounter}\n              />\n            )}\n            {timerOn && timerStart && (\n              <img\n                src={pause}\n                alt=\"pause\"\n                onClick={stopCounter}\n                className={styles.play}\n              />\n            )}\n            <img\n              src={deleted}\n              alt=\"reset\"\n              className={styles.delete}\n              onClick={resetTimer}\n            />\n          </div>\n        </div>\n        {mode === \"work\" && (\n          <div className={styles.todo}>\n            <h3>專心，</h3>\n            <p>一步一步完成</p>\n          </div>\n        )}\n        {mode === \"rest\" && (\n          <div className={styles.resttext}>\n            <h3>休息，</h3>\n            <p>是為了走更遠</p>\n          </div>\n        )}\n      </div>\n      {mode === \"work\" && (\n        <img className={styles.tomato} src={orangeTomato} alt=\"orangeTomato\" />\n      )}\n      {mode === \"rest\" && (\n        <img className={styles.tomato} src={greenTomato} alt=\"greenTomato\" />\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    mode: state.mode,\n    timer: state.timer,\n    timerOn: state.timerOn,\n    timerStart: state.timerStart,\n    currentTime: state.currentTime,\n    currentWeekday: state.currentWeekday,\n    currentDate: state.currentDate,\n    soundOn: state.soundOn\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setCurrentTime: () => {\n      dispatch(setCurrentTime());\n    },\n    updateTime: () => {\n      dispatch(updateTime());\n    },\n    startCounter: () => {\n      dispatch(startCounter());\n    },\n    resetTimer: () => {\n      dispatch(resetTimer());\n    },\n    stopCounter: () => {\n      dispatch(stopCounter());\n    },\n    handleSound: () => {\n      dispatch(handleSound());\n    }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Main);\n","import React from \"react\";\nimport styles from \"../styles/Navbar.module.scss\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { toggleRestMode, toggleWorkMode } from \"../redux/actions/actions\";\n\nconst Navbar = props => {\n  // const mode = useSelector(state => state.mode.mode);\n  // const showTodo = useSelector(state => state.mode.showTodo);\n  const dispatch = useDispatch();\n\n  return (\n    <div className={styles.nav}>\n      <button\n        className={styles.green}\n        value=\"rest\"\n        onClick={() => dispatch(toggleRestMode())}\n      />\n      <button\n        onClick={() => dispatch(toggleWorkMode())}\n        value=\"work\"\n        className={styles.orange}\n      />\n    </div>\n  );\n};\n\nexport default Navbar;\n","import React from \"react\";\nimport styles from \"../styles/TodoList.module.scss\";\nimport remove from \"../images/icon-cancel.svg\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { completeTodo, removeTodo } from \"../redux/actions/actions\";\n\nconst TodoList = () => {\n  const todos = useSelector(state => state.todoList);\n  const filterMode = useSelector(state => state.filter);\n  const dispatch = useDispatch();\n  const filtered = todos.filter(todo => {\n    if (filterMode === \"all\") {\n      return todo;\n    } else if (filterMode === \"active\") {\n      return todo.completed === false;\n    }\n    return todo.completed;\n  });\n\n  return (\n    <div className={styles.todolist}>\n      <ul>\n        {filtered.map(todo => (\n          <li\n            key={todo.id}\n            className={todo.completed ? styles.completed : styles.undo}\n          >\n            <span\n              style={{\n                textDecoration: todo.completed ? \"line-through\" : \"none\"\n              }}\n            >\n              {todo.text}\n            </span>\n            <div className={styles.buttons}>\n              <button\n                className={styles.checked}\n                onClick={() => dispatch(completeTodo(todo.id))}\n              >\n                V\n              </button>\n              <button>\n                <img\n                  src={remove}\n                  alt=\"remove\"\n                  onClick={() => dispatch(removeTodo(todo.id))}\n                />\n              </button>\n            </div>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default TodoList;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport TodoList from \"./TodoList\";\nimport styles from \"../styles/Todo.module.scss\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  addTodo,\n  filterActiveTodo,\n  filterCompletedTodo,\n  filterAllTodo\n} from \"../redux/actions/actions\";\n\nconst Todo = () => {\n  const showTodo = useSelector(state => state.showTodo);\n  const dispatch = useDispatch();\n  let input;\n  return (\n    <div\n      className={styles.todo}\n      style={{\n        transform: showTodo ? \"translateX(0%)\" : \"translateX(-100%)\"\n      }}\n    >\n      <div\n        className={styles.container}\n        style={{\n          marginLeft: showTodo ? \"160px\" : \"25px\",\n          marginRight: showTodo ? \"40px\" : \"25px\"\n        }}\n      >\n        <div className={styles.panel}>\n          <h1>待辦清單</h1>\n          <div className={styles.status_panel}>\n            <button onClick={() => dispatch(filterActiveTodo())}>未完成</button>\n            <button onClick={() => dispatch(filterCompletedTodo())}>\n              已完成\n            </button>\n            <button onClick={() => dispatch(filterAllTodo())}>全部</button>\n          </div>\n        </div>\n        <form\n          onSubmit={e => {\n            e.preventDefault();\n            if (!input.value.trim()) {\n              return;\n            } else {\n              dispatch(addTodo(input.value));\n              input.value = \"\";\n            }\n          }}\n        >\n          <input\n            type=\"text\"\n            placeholder=\"新增待辦事項\"\n            ref={node => (input = node)}\n          />\n          <button type=\"submit\">+</button>\n        </form>\n        <TodoList />\n      </div>\n    </div>\n  );\n};\n\nexport default connect()(Todo);\n","import React, { Component } from \"react\";\nimport Main from \"./components/main\";\nimport Navbar from \"./components/Navbar\";\nimport Todo from \"./components/Todo\";\nimport styles from \"./App.module.scss\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      showTodo: false,\n      mode: \"work\",\n      time: 1500,\n      timeText: \"\",\n      timerOn: false,\n      timerStart: false,\n      currentFilter: \"all\",\n      soundOn: false\n    };\n  }\n\n  showRemainTime = time => {\n    let minute = parseInt(time / 60);\n    if (minute < 10) {\n      minute = `0${minute}`;\n    }\n    let second = time % 60;\n    if (second < 10) {\n      second = `0${second}`;\n    }\n    this.setState({\n      timeText: `${minute}:${second}`\n    });\n  };\n\n  startTimer = () => {\n    console.log(this.state.time);\n    this.setState({\n      timerOn: true,\n      timerStart: true,\n      time: this.state.time\n    });\n    this.timer = setInterval(() => {\n      const newTime = this.state.time - 1;\n      console.log(newTime);\n      if (newTime >= 0) {\n        this.setState({\n          time: newTime\n        });\n        this.showRemainTime(this.state.time);\n      } else {\n        clearInterval(this.timer);\n        this.playSound();\n        this.setState({ timerOn: false, timerStart: false });\n      }\n    }, 1000);\n  };\n\n  stopTimer = () => {\n    clearInterval(this.timer);\n    this.setState({\n      timerOn: false\n    });\n  };\n\n  resetTimer = () => {\n    const mode = this.state.mode;\n    console.log(mode);\n    clearInterval(this.timer);\n    if (mode === \"work\") {\n      this.setState(\n        {\n          time: 1500,\n          timerOn: false,\n          timerStart: false\n        },\n        () => this.showRemainTime(1500)\n      );\n    } else {\n      this.setState(\n        {\n          time: 300,\n          timerOn: false,\n          timerStart: false\n        },\n        () => this.showRemainTime(300)\n      );\n    }\n  };\n\n  showTodoList = mode => {\n    if (mode === this.state.mode) {\n      this.setState(state => ({\n        showTodo: !state.showTodo\n      }));\n    }\n  };\n\n  changeWorkMode = e => {\n    let presentMode = e.target.value;\n    this.setState(\n      prevState => ({\n        mode: \"work\",\n        time: 1500\n      }),\n      () => this.resetTimer(this.state.mode)\n    );\n    this.showTodoList(presentMode);\n  };\n\n  changeRestMode = e => {\n    let presentMode = e.target.value;\n    this.setState(\n      prevState => ({\n        mode: \"rest\",\n        time: 300\n      }),\n      () => this.resetTimer(this.state.mode)\n    );\n    this.showTodoList(presentMode);\n  };\n\n  changeFilterComplete = () => {\n    this.setState({\n      currentFilter: \"completed\"\n    });\n    console.log(\"completed\");\n  };\n\n  changeFilterActive = () => {\n    this.setState({\n      currentFilter: \"active\"\n    });\n    console.log(\"active\");\n  };\n\n  playSound = () => {\n    const audioPlayer = document.getElementById(\"player\");\n    if (this.state.soundOn && this.state.time === 0) {\n      audioPlayer.play();\n    } else {\n      audioPlayer.pause();\n    }\n  };\n\n  handleSound = () => {\n    this.setState(prevState => {\n      const toggleSound = !prevState.soundOn;\n      return { soundOn: toggleSound };\n    });\n  };\n\n  render() {\n    const { showTodo, mode, time } = this.state;\n\n    return (\n      <div\n        className={styles.app}\n        style={{ overflow: this.state.showTodo ? \"hidden\" : null }}\n      >\n        <Navbar\n          changeWorkMode={this.changeWorkMode}\n          showTodo={showTodo}\n          changeRestMode={this.changeRestMode}\n        />\n        <Todo\n          showTodo={showTodo}\n          currentFilter={this.state.currentFilter}\n          changeFilterComplete={this.changeFilterComplete}\n          changeFilterActive={this.changeFilterActive}\n        />\n        <Main\n          showTodo={showTodo}\n          mode={mode}\n          time={time}\n          showRemainTime={this.showRemainTime}\n          timeText={this.state.timeText}\n          startTimer={this.startTimer}\n          stopTimer={this.stopTimer}\n          resetTimer={this.resetTimer}\n          timerOn={this.state.timerOn}\n          timerStart={this.state.timerStart}\n          handleSound={this.handleSound}\n          soundOn={this.state.soundOn}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// import { combineReducers } from \"redux\";\n\n// const allReducer = combineReducers({\n//   mode: modeReducer,\n//   counter: counterReducer,\n//   todo: todoReducer\n// });\n\nconst initialState = {\n  mode: \"work\",\n  showTodo: false,\n  timer: 1500,\n  todoList: [],\n  timerOn: false,\n  timerStart: false,\n  filter: \"all\",\n  currentWeekday: \"\",\n  currentDate: \"\",\n  currentTime: \"\",\n  soundOn: false\n};\n\nconst allReducer = (state = initialState, action) => {\n  switch (action.type) {\n    //模式切換\n    case \"TOGGLE_WORKMODE\":\n      if (state.mode === action.payload) {\n        return Object.assign({}, state, {\n          mode: \"work\",\n          showTodo: !state.showTodo,\n          timer: 1500\n        });\n      } else {\n        return Object.assign({}, state, {\n          mode: \"work\",\n          showTodo: state.showTodo,\n          timer: 1500\n        });\n      }\n    case \"TOGGLE_RESTMODE\":\n      if (state.mode === action.payload) {\n        return Object.assign({}, state, {\n          mode: \"rest\",\n          showTodo: !state.showTodo,\n          timer: 300\n        });\n      } else {\n        return Object.assign({}, state, {\n          mode: \"rest\",\n          showTodo: state.showTodo,\n          timer: 300\n        });\n      }\n    //todo操作\n    case \"ADD_TODO\":\n      return Object.assign({}, state, {\n        todoList: [\n          ...state.todoList,\n          {\n            id: action.id,\n            text: action.text,\n            completed: false\n          }\n        ]\n      });\n    case \"COMPLETE_TODO\":\n      return Object.assign({}, state, {\n        todoList: [\n          ...state.todoList.map(todo =>\n            todo.id === action.id\n              ? { ...todo, completed: !todo.completed }\n              : todo\n          )\n        ]\n      });\n    case \"REMOVE_TODO\":\n      return Object.assign({}, state, {\n        todoList: [...state.todoList.filter(todo => todo.id !== action.id)]\n      });\n    case \"FILTER_ACTIVE_TODO\":\n      return Object.assign({}, state, {\n        filter: \"active\"\n      });\n    case \"FILTER_ALL_TODO\":\n      return Object.assign({}, state, {\n        filter: \"all\"\n      });\n    case \"FILTER_COMPLETED_TODO\":\n      return Object.assign({}, state, {\n        filter: \"completed\"\n      });\n    case \"SET_VISIBILITY_FILTER\":\n      return Object.assign({}, state, {\n        todoList: [\n          ...state,\n          {\n            filter: action.filter\n          }\n        ]\n      });\n    //時間操作\n    case \"SET_CURRENT_TIME\":\n      return Object.assign({}, state, {\n        currentWeekday: action.currentWeekday,\n        currentDate: action.currentDate,\n        currentTime: action.currentTime\n      });\n\n    case \"RESET_TIMER\":\n      if (state.mode === \"work\") {\n        return Object.assign({}, state, {\n          timer: 1500\n        });\n      } else {\n        return Object.assign({}, state, {\n          timer: 300\n        });\n      }\n    case \"TICK\":\n      return Object.assign({}, state, {\n        timer: state.timer - 1,\n        timerOn: true,\n        timerStart: true\n      });\n    case \"STOP_COUNTER\":\n      return Object.assign({}, state, {\n        timer: state.timer,\n        timerOn: false\n      });\n    case \"HANDLE_SOUND\":\n      return Object.assign({}, state, {\n        soundOn: !state.soundOn\n      });\n    default:\n      return state;\n  }\n};\n\nexport default allReducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport allReducer from \"./redux/reducers/allReducer\";\nimport { Provider } from \"react-redux\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(allReducer, composeEnhancers(applyMiddleware(thunk)));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}